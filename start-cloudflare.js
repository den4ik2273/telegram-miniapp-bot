require('dotenv').config();
const { spawn } = require('child_process');
const fs = require('fs');

let botProcess = null;
let cloudflaredProcess = null;

function startCloudflared() {
    return new Promise((resolve, reject) => {
        console.log('üîÑ –°–æ–∑–¥–∞–Ω–∏–µ HTTPS —Ç—É–Ω–Ω–µ–ª—è —á–µ—Ä–µ–∑ Cloudflare...\n');
        
        cloudflaredProcess = spawn('.\\cloudflared.exe', ['tunnel', '--url', 'http://localhost:3000'], {
            shell: true
        });
        
        let tunnelUrl = '';
        
        cloudflaredProcess.stdout.on('data', (data) => {
            const output = data.toString();
            console.log(output);
            
            // –ò—â–µ–º URL –≤ –≤—ã–≤–æ–¥–µ
            const urlMatch = output.match(/https:\/\/[^\s]+\.trycloudflare\.com/);
            if (urlMatch && !tunnelUrl) {
                tunnelUrl = urlMatch[0];
                resolve(tunnelUrl);
            }
        });
        
        cloudflaredProcess.stderr.on('data', (data) => {
            const output = data.toString();
            console.log(output);
            
            // URL –º–æ–∂–µ—Ç –±—ã—Ç—å –∏ –≤ stderr
            const urlMatch = output.match(/https:\/\/[^\s]+\.trycloudflare\.com/);
            if (urlMatch && !tunnelUrl) {
                tunnelUrl = urlMatch[0];
                resolve(tunnelUrl);
            }
        });
        
        cloudflaredProcess.on('error', (err) => {
            reject(err);
        });
        
        // –¢–∞–π–º–∞—É—Ç –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ URL –Ω–µ –±—É–¥–µ—Ç –Ω–∞–π–¥–µ–Ω
        setTimeout(() => {
            if (!tunnelUrl) {
                reject(new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å URL —Ç—É–Ω–Ω–µ–ª—è –∑–∞ 30 —Å–µ–∫—É–Ω–¥'));
            }
        }, 30000);
    });
}

async function startBot(tunnelUrl) {
    return new Promise((resolve) => {
        console.log('\nü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º .env
        const envContent = `BOT_TOKEN=8342649818:AAGTTVuWqO-18EB8twuQvQFZ94LRQFbqCy8
MINIAPP_URL=${tunnelUrl}
PORT=3000
NGROK_AUTHTOKEN=34h1hFLJP85q9UGiQvj2gWhdzuu_4HRc671xWf5CPD9TE9kMZ`;
        
        fs.writeFileSync('.env', envContent, 'utf8');
        console.log('‚úÖ –§–∞–π–ª .env –æ–±–Ω–æ–≤–ª–µ–Ω');
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        botProcess = spawn('node', ['bot.js'], {
            stdio: 'inherit',
            shell: true
        });
        
        botProcess.on('error', (err) => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', err);
        });
        
        setTimeout(resolve, 2000);
    });
}

async function main() {
    try {
        // –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ (–≤–µ–±-—Å–µ—Ä–≤–µ—Ä)
        console.log('ü§ñ –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞...\n');
        
        botProcess = spawn('node', ['bot.js'], {
            stdio: 'inherit',
            shell: true,
            env: { ...process.env, MINIAPP_URL: 'http://localhost:3000' }
        });
        
        botProcess.on('error', (err) => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', err);
        });
        
        // –î–∞–µ–º —Å–µ—Ä–≤–µ—Ä—É –≤—Ä–µ–º—è –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
        console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...');
        await new Promise(resolve => setTimeout(resolve, 5000));
        console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000\n');
        
        // –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å–∫–∞–µ–º —Ç—É–Ω–Ω–µ–ª—å
        const tunnelUrl = await startCloudflared();
        
        console.log('\n‚úÖ –¢—É–Ω–Ω–µ–ª—å —Å–æ–∑–¥–∞–Ω!');
        console.log('üåê –ü—É–±–ª–∏—á–Ω—ã–π URL:', tunnelUrl);
        console.log('');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º .env —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º URL
        const envContent = `BOT_TOKEN=8342649818:AAGTTVuWqO-18EB8twuQvQFZ94LRQFbqCy8
MINIAPP_URL=${tunnelUrl}
PORT=3000
NGROK_AUTHTOKEN=34h1hFLJP85q9UGiQvj2gWhdzuu_4HRc671xWf5CPD9TE9kMZ`;
        
        fs.writeFileSync('.env', envContent, 'utf8');
        console.log('‚úÖ –§–∞–π–ª .env –æ–±–Ω–æ–≤–ª–µ–Ω —Å –Ω–æ–≤—ã–º URL');
        
        console.log('\n' + '='.repeat(60));
        console.log('‚úÖ –í–°–ï –ó–ê–ü–£–©–ï–ù–û!');
        console.log('='.repeat(60));
        console.log('');
        console.log('üì± –¢–µ–ø–µ—Ä—å –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –±–æ—Ç–∞ –≤ @BotFather:');
        console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ @BotFather –≤ Telegram');
        console.log('   2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /mybots');
        console.log('   3. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞');
        console.log('   4. Bot Settings ‚Üí Menu Button');
        console.log('   5. Edit Menu Button URL');
        console.log('   6. –í—Å—Ç–∞–≤—å—Ç–µ URL:', tunnelUrl);
        console.log('');
        console.log('üß™ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
        console.log('   - –û—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç–∞ –≤ Telegram');
        console.log('   - –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start');
        console.log('   - –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å Mini App"');
        console.log('');
        console.log('‚ö†Ô∏è  –¢—É–Ω–Ω–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ–∫–∞ –∑–∞–ø—É—â–µ–Ω —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç');
        console.log('   –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏');
        console.log('');
        
        // –î–µ—Ä–∂–∏–º –ø—Ä–æ—Ü–µ—Å—Å –∞–∫—Ç–∏–≤–Ω—ã–º
        await new Promise(() => {});
        
    } catch (err) {
        console.error('\n‚ùå –û—à–∏–±–∫–∞:', err.message);
        
        if (cloudflaredProcess) {
            cloudflaredProcess.kill();
        }
        if (botProcess) {
            botProcess.kill();
        }
        process.exit(1);
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
process.on('SIGINT', () => {
    console.log('\n\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞...');
    if (cloudflaredProcess) {
        cloudflaredProcess.kill();
    }
    if (botProcess) {
        botProcess.kill();
    }
    process.exit();
});

main();

